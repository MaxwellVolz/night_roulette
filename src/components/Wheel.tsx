/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/roulette_wheel.glb -o src/components/Wheel.tsx 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ball: THREE.Mesh
    Cylinder: THREE.Mesh
    Cylinder001: THREE.Mesh
    Cylinder001_1: THREE.Mesh
    Cylinder001_2: THREE.Mesh
    Cylinder001_3: THREE.Mesh
    Cylinder001_4: THREE.Mesh
  }
  materials: {
    ['Material.007']: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.006']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/roulette_wheel.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.ball.geometry} material={materials['Material.007']} position={[4.968, 37.222, -4.002]} />
      <mesh geometry={nodes.Cylinder.geometry} material={materials['Material.001']} position={[0, 4.029, 0]} scale={[21.904, 3.538, 21.904]} />
      <group position={[0, 4.029, 0]} scale={[21.904, 3.538, 21.904]}>
        <mesh geometry={nodes.Cylinder001.geometry} material={materials['Material.001']} />
        <mesh geometry={nodes.Cylinder001_1.geometry} material={materials['Material.005']} />
        <mesh geometry={nodes.Cylinder001_2.geometry} material={materials['Material.002']} />
        <mesh geometry={nodes.Cylinder001_3.geometry} material={materials['Material.006']} />
        <mesh geometry={nodes.Cylinder001_4.geometry} material={materials['Material.004']} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/roulette_wheel.glb')
